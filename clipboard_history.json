[
  "import tkinter as tk\r\nfrom tkinter import ttk\r\nimport pyperclip\r\nimport threading\r\nimport time\r\nimport json\r\nimport os\r\n\r\nHISTORY_FILE = \"clipboard_history.json\"\r\n\r\nclass ClipboardManager:\r\n    def __init__(self, root):\r\n        self.root = root\r\n        self.root.title(\"Clipboard Manager\")\r\n        self.history = self.load_history()\r\n        self.last_clipboard = \"\"\r\n        self.max_items = 50\r\n\r\n        self.setup_ui()\r\n        self.update_listbox()\r\n        self.monitor_clipboard()\r\n\r\n    def setup_ui(self):\r\n        self.frame = ttk.Frame(self.root, padding=10)\r\n        self.frame.pack(fill=tk.BOTH, expand=True)\r\n\r\n        self.listbox = tk.Listbox(self.frame, height=20, width=50)\r\n        self.listbox.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)\r\n        self.listbox.bind('<<ListboxSelect>>', self.on_select)\r\n\r\n        self.scrollbar = ttk.Scrollbar(self.frame, orient=\"vertical\", command=self.listbox.yview)\r\n        self.scrollbar.pack(side=tk.RIGHT, fill=tk.Y)\r\n        self.listbox.config(yscrollcommand=self.scrollbar.set)\r\n\r\n    def monitor_clipboard(self):\r\n        def loop():\r\n            while True:\r\n                try:\r\n                    current = pyperclip.paste()\r\n                    if current != self.last_clipboard and current.strip():\r\n                        self.last_clipboard = current\r\n                        self.add_to_history(current)\r\n                except:\r\n                    pass\r\n                time.sleep(0.5)\r\n        threading.Thread(target=loop, daemon=True).start()\r\n\r\n    def add_to_history(self, text):\r\n        if text in self.history:\r\n            self.history.remove(text)\r\n        self.history.insert(0, text)\r\n        if len(self.history) > self.max_items:\r\n            self.history.pop()\r\n        self.update_listbox()\r\n        self.save_history()\r\n\r\n    def update_listbox(self):\r\n        self.listbox.delete(0, tk.END)\r\n        for item in self.history:\r\n            display = item if len(item) < 60 else item[:60] + \"...\"\r\n            self.listbox.insert(tk.END, display)\r\n\r\n    def on_select(self, event):\r\n        if not self.listbox.curselection():\r\n            return\r\n        index = self.listbox.curselection()[0]\r\n        text = self.history[index]\r\n        pyperclip.copy(text)\r\n\r\n    def save_history(self):\r\n        try:\r\n            with open(HISTORY_FILE, \"w\", encoding=\"utf-8\") as f:\r\n                json.dump(self.history, f, ensure_ascii=False, indent=2)\r\n        except Exception as e:\r\n            print(\"Error saving history:\", e)\r\n\r\n    def load_history(self):\r\n        if os.path.exists(HISTORY_FILE):\r\n            try:\r\n                with open(HISTORY_FILE, \"r\", encoding=\"utf-8\") as f:\r\n                    data = json.load(f)\r\n                    if isinstance(data, list):\r\n                        return data\r\n            except Exception as e:\r\n                print(\"Error loading history:\", e)\r\n        return []\r\n\r\nif __name__ == \"__main__\":\r\n    root = tk.Tk()\r\n    app = ClipboardManager(root)\r\n    root.mainloop()\r\n",
  "PS C:\\Users\\krish\\OneDrive\\Desktop\\clipboard_history_manager> & c:/Users/krish/OneDrive/Desktop/clipboard_history_manager/venv/Scripts/python.exe c:/Users/krish/OneDrive/Desktop/clipboard_history_manager/clipboard-history-manager.py\r\nPS C:\\Users\\krish\\OneDrive\\Desktop\\clipboard_history_manager> \r\n"
]